{#
/**
 * @file
 * Bootstrap Paragraphs template for displaying a Modal.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{{ attach_library('bootstrap_paragraphs/bootstrap-paragraphs') }}

{# The template default set classes. #}
{# Sets Paragraph ID as class. #}
{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
'paragraph--id--' ~ paragraph.id.value,
content.bp_width['#items'].getString() ? content.bp_width['#items'].getString(),
bs.background_color ? bs.background_color,
content.bp_margin[0]['#markup'] ? content.bp_margin[0]['#markup'],
content.bp_padding[0]['#markup'] ? content.bp_padding[0]['#markup'],
]
%}

{# Sets Unique ID for Modal from Paragraph ID. #}
{% set paragraph_id = 'modal-' ~ paragraph.id.value %}

{# Prints div with classes, and button to trigger the modal. #}
	<div{{attributes.addClass(classes)}}>
		<div class="paragraph__column"> {% if paragraph.bp_header is not empty %}
			<h2>{{ content.bp_header }}</h2>
		{% endif %}
		{# Button trigger modal #}
		<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#{{ paragraph_id }}">
			{{ content.bp_modal_button_text }}
		</button>
	</div>
</div>

{# Modal markup with modal title, and loops for modal body and modal footer. #}
<div class="modal fade" id="{{ paragraph_id }}" tabindex="-1" role="dialog" aria-labelledby="{{ paragraph_id }}-label" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				{% if paragraph.bp_modal_title is not empty %}
					<h5 class="modal-title" id="{{ paragraph_id }}-label">
						{{ content.bp_modal_title }}
					</h5>
				{% endif %}
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			{% if paragraph.bp_modal_body is not empty %}
				<div class="modal-body">
					{% for key, item in content.bp_modal_body|filter((value, key) => key|first != '#') %}
						{{ item }}
					{% endfor %}
				</div>
			{% endif %}
			{% if paragraph.bp_modal_footer is not empty %}
				<div class="modal-footer">
					{% for key, item in content.bp_modal_footer%}
						{% if key|first != '#' %}
							{{ item }}
						{% endif %}
					{% endfor %}
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			{% endif %}
		</div>
	</div>
</div>
